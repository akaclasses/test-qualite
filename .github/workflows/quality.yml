# .github/workflows/quality.yml

name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    
    services:
      sonarqube:
        image: sonarqube:10.1-community
        ports:
          - 9000:9000
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install pytest pytest-cov

    - name: Run tests with coverage
      run: |
        pytest --cov=src --cov-report=xml

    - name: Wait for SonarQube
      run: |
        timeout 300 bash -c 'until curl -s http://localhost:9000/api/system/status | grep -q "UP"; do sleep 5; done'

    - name: SonarQube Scan
      run: |
        wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip -q sonar-scanner-cli-4.8.0.2856-linux.zip
        ./sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner \
          -Dsonar.projectKey=python-demo \
          -Dsonar.projectName="Python Quality Demo" \
          -Dsonar.sources=src \
          -Dsonar.tests=tests \
          -Dsonar.python.coverage.reportPaths=coverage.xml \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.login=admin \
          -Dsonar.password=admin

    - name: Get Results and Display
      run: |
        sleep 30
        
        # R√©cup√©rer les m√©triques
        METRICS=$(curl -s -u admin:admin "http://localhost:9000/api/measures/component?component=python-demo&metricKeys=bugs,vulnerabilities,code_smells,coverage,duplicated_lines_density")
        
        # R√©cup√©rer les d√©tails des issues
        ISSUES=$(curl -s -u admin:admin "http://localhost:9000/api/issues/search?componentKeys=python-demo")
        
        echo "=== üìä SONARQUBE RESULTS ==="
        echo "$METRICS" | jq '.'
        
        echo ""
        echo "=== üîç DETAILED ISSUES ==="
        echo "$ISSUES" | jq -r '.issues[] | "‚ùå \(.severity) - \(.type): \(.message)\n   üìÅ File: \(.component | split(":") | last)\n   üìç Line: \(.textRange.startLine // "N/A")\n"'